class Highscores {
    field Array names;
    field Array scores;
    field int size;

    constructor Highscores new(int Asize) {
        let size = Asize;
        let names = Array.new(Asize);
        let scores = Array.new(Asize);

        return this;
    }

    method void dispose() {
        var int i;
        var String currentName;

        let i = 0;
        while (i < size) {
            if (~(names[i] = null)) {
                let currentName = names[i];
                do currentName.dispose();
            }
            let i = i + 1;
        }

        do names.dispose();
        do scores.dispose();
        do Memory.deAlloc(this);
        return;
    }

    method int getMinimum() {
        if (~(names[size - 1] = null)) {
            return scores[size - 1];
        }

        return 0;
    }

    method void insert(String name, int score) {
        var int i;
        var String pushedName, nameToPush;
        var int pushedScore, scoreToPush;

        let pushedName = null;
        let pushedScore = 0;

        let i = 0;
        while (i < size) {
            if (pushedName = null) {
                if (~(names[i] = null)) {
                    if (scores[i] < score) {
                        let pushedName = names[i];
                        let pushedScore = scores[i];
                        let names[i] = name;
                        let scores[i] = score;
                        let name = null;
                    }
                }
                else {
                    let names[i] = name;
                    let scores[i] = score;
                    let name = null;
                    let i = size;
                }
            }
            else {
                let nameToPush = names[i];
                let scoreToPush = scores[i];
                let names[i] = pushedName;
                let scores[i] = pushedScore;
                let pushedName = nameToPush;
                let pushedScore = scoreToPush;
                let nameToPush = null;
                if (pushedName = null) {
                    let i = size;
                }
            }
            let i = i + 1;
        }

        if (~(pushedName = null)) {
            do pushedName.dispose();
            let pushedName = null;
        }

        if (~(name = null)) {
            do name.dispose();
            let name = null;
        }

        return;
    }

    method void showHighscores(int score) {
        var String name;
        var int i;
        // Draw borders
        do Screen.setColor(false);
        do Screen.drawRectangle(50, 30, 460, 215);
        do Screen.setColor(true);
        do Screen.drawLine(50, 30, 460, 30);
        do Screen.drawLine(460, 30, 460, 215);
        do Screen.drawLine(460, 215, 50, 215);
        do Screen.drawLine(50, 215, 50, 30);

        // Draw text
        do Output.moveCursor(5, 27);
        do Output.printString("Game over");
    
        if (getMinimum() < score) {
            do Output.moveCursor(9, 9);
            let name = Keyboard.readLine("Enter your name: ");
            
            do insert(name, score);

            do Output.moveCursor(9, 9);
            do Output.printString("                                            ");
        }

        do draw(9, 55, 9);

        // Wait for user to press any key
        while (Keyboard.keyPressed() = 0) {}
        return;
    }

    method void draw(int x1, int x2, int y) {
        var int i;
        var String scoreString;
        let scoreString = String.new(10);

        let i = 0;
        while (i < size) {
            if (~(names[i] = null)) {
                // Print place
                do Output.moveCursor(y + i, x1);
                do Output.printInt(i + 1);

                // Print name
                do Output.moveCursor(y + i, x1 + 3);
                do Output.printString(names[i]);

                // Print score
                do scoreString.setInt(scores[i]);
                do Output.moveCursor(y + i, x2 - scoreString.length());
                do Output.printString(scoreString);
            }
            let i = i + 1;
        }

        do scoreString.dispose();
        return;
    }
}
